
package org.example;

import java_cup.runtime.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.io.*;
class Parser;

parser code{:
    IdLexer idLexer;
    public static void main(String[] arg) throws Exception{
        String archivo = "src/main/java/org/example/prueba.txt";
        File f = new File(archivo);
        InputStream inputStream = new FileInputStream(f);
        IdLexer lexer = new org.example.IdLexer(new InputStreamReader(inputStream));

        Parser p = new Parser();
        p.idLexer = lexer;
        p.setScanner(p.idLexer);
        p.parse();
    }
    List<Integer> regs = new ArrayList<Integer>(Collections.nCopies(26, 0));

    int nline;
    private int num_var;
    private int num_clau_def;
    private int num_clau_prog = 0;
    private boolean ok = true;

    public void syntax_error(Symbol cur_token){
        report_error("Error de sintaxis: linea "+idLexer.linea()+
        ", columna "+idLexer.columna() + "\n", null);
    }
:}

terminal String PARAMETER, CNF;
terminal EOL, NEGATION;
terminal Integer NUMBER;

non terminal program, clauses, clause, header, literals, literal, variable;

precedence left NEGATION;
start with program;

program ::= {: ; :}
            | header clauses {: ; :}
            | error
            ;

clauses ::= clause {: ; :}
            | clauses clause {: ; :};

header ::= PARAMETER CNF NUMBER:e1 NUMBER:e2 {: System.out.println("Here 1");
                                                num_var=e1;
                                                num_clau_def=e2;:};

clause ::= literals EOL {: System.out.println("Here 2");
                                                                           num_clau_prog++; :}
          ;

literals ::= literal:e {: System.out.println("Here 3");
                                                                          RESULT="p"+e; :}
             | literals:e1 literal:e2 {: System.out.println("Here 4");
                                                                                         RESULT="p"+e1+e2; :};

literal ::= variable:e {: System.out.println("Here 5");
                                                                          RESULT=e ; :}
            | NEGATION variable:e {: System.out.println("Here 6");
                                                                                     RESULT="Â¬"+e ;:};

variable ::= NUMBER:e1 {: System.out.println("here 7"); if (e1>num_var){ System.out.println("variable no definida");};:};
